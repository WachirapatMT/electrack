version: "3"
services:
  zookeeper:
    image: docker.io/wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: docker.io/wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: "INTERNAL://:29092,PLAINTEXT://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,PLAINTEXT://127.0.0.1:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CREATE_TOPICS: "electrack:13:1"
    volumes:
      - kafka-data:/kafka
    depends_on:
      - zookeeper
  kafdrop:
    image: docker.io/obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - kafka
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - DATA_AUTOCOMPLETE_VALUESUGGESTIONS_TERMINATEAFTER=1800000
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  metricbeat:
    image: docker.elastic.co/beats/metricbeat
    environment:
      - setup.kibana.host=kibana:5601
      - output.elasticsearch.hosts=["elasticsearch:9200"]
volumes:
  elasticsearch-data:
    driver: local
  kafka-data:
    driver: local